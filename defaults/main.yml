---
# defaults file for smsshell

# Simple placeholder to allow other roles to detect this role
smsshell__role: True

# Enable facts deploiement
smsshell__facts: True


### INSTALL CONFIGURATION
# ---------------------------------------
# List of required packages
smsshell__packages_names:
  - git
  - libgammu-dev
  - python3
  - python3-dev
  - python3-virtualenv

# URL of the SMSShell repository
smsshell__repository_url: https://github.com/Turgon37/SMSShell.git

# What version of IPCheck to retrieve
smsshell__repository_version: v1.0.0

# Path to install SMSShell
smsshell__install_path: /opt/SMSShell

# Path to the pip requirements file
smsshell__install_pip_requirements_file: '{{ smsshell__install_path }}/pip-requirements.txt'

# Allow automatic git pull on each ansible run
smsshell__git_update: False


### SERVICE CONFIGURATION
# If theses options are defined the program's
# privileges will be downgrade to this user and group rights
# User to run smsshell as
smsshell__service_user: smsshell
# Group to run smsshell as
smsshell__service_group: '{{ smsshell__service_user }}'

# List of username to append to smsshell service group
# Theses users will be able to read/write from socket
smsshell__service_group_users:
  - gammu

# Use service user/group (above) default user on service start
# If set to False, the service must be started with root privileges
smsshell__run_service_as_native_user: True

# The name of the service to use
smsshell__service_name: smsshell

# If true, the service will be enabled and started
# otherwise, it will be disabled and stopped
smsshell__service_enabled: True

# Path to service executable
smsshell__executable: '{{ smsshell__service_virtual_env_directory }}/bin/python3 {{ smsshell__install_path }}/bin/sms-shell-launcher'

# Where to store working datas
smsshell__service_var_directory: /var/lib/smsshell

# Path to the python virtual env
smsshell__service_virtual_env_directory: /opt/smsshell-virtualenv

# Custom command to use during virtual env operations
smsshell__service_virtual_env_command: /usr/bin/env python3 -m virtualenv --python=python3

# Path to service runtime directory
smsshell__service_run_directory: '/var/run{% if smsshell__run_service_as_native_user %}/smsshell{% endif %}'

# Path to pidfile
smsshell__service_pidfile: '{{ smsshell__service_run_directory }}/smsshell.pid'

# The path to the configuration file
smsshell__configuration_file_path: /etc/smsshell.conf


### GENERAL CONFIGURATION
# Main fonctionnal mode in (daemon, standalone)
smsshell__mode: daemon

# Set LOG level for message filtering in
#  ERROR, WARN, INFO, DEBUG, INFO
# Be careful, at debug level, some sensible message (such as passwords)
#  can be logged
smsshell__log_level: INFO

# Set LOG target in
#  SYSLOG, STDERR, STDOUT, 'A path to a file'
smsshell__log_target: STDOUT

# The log format. See https://docs.python.org/3/library/logging.html#logrecord-attributes for available tokens
# Don't forget to escape percent with a double percent
#smsshell__log_format: %%(name)s[%%(process)d]: %%(levelname)s %%(message)s


### DAEMON CONFIGURATION
# The type of input message receiver in
#  (unix,fifo)
smsshell__receiver_type: unix

# The type of output message transmitter in
#  (stdout)
smsshell__transmitter_type: python_gammu

# The type of message parser, each message
# received by the receiver will be parsed by this item.
# in (json)
smsshell__message_parser: json

# Maximum lifetime of idle shell sessions
smsshell__session_ttl: 600


## RECEIVER CONFIGURATION
# The path to the receiver file is required
# For unix type : the path to the unix socket
# For fifo type : the path to the fifo file
smsshell__receiver_path: "{{ smsshell__service_run_directory }}/smsshell.{{ 'fifo' if smsshell__receiver_type == 'fifo' else 'sock' }}"

# The group that will own the receivers path
# this allow another group to read/write using the receiver path
# without to add it to the smsshell__service_group group
smsshell__receiver_group: gammu

# Sockets listen queue
# the number of unaccepted connections that the system will allow before refusing new connections.
# This apply only on network/unix socket
smsshell__receiver_listen_queue: 10

# The umask the daemon will use to create socket and fifo
smsshell__receiver_umask: '0117'


## TRANSMITTER CONFIGURATION
# The path to the gammu-smsdrc configuration of the currently running
# gammu-smsd daemon
smsshell__transmitter_smsdrc_configuration: /etc/gammu-smsdrc
